!function(a,b){"object"==typeof module&&"object"==typeof module.exports&&(exports=module.exports=b()),"function"==typeof define&&define.amd&&define(["terraformer/terraformer"],b),"object"==typeof a.navigator&&("undefined"==typeof a.Terraformer&&(a.Terraformer={}),a.Terraformer.GeoStore=b().GeoStore)}(this,function(){function a(a,b){var c=arguments.length>2?Array.prototype.slice.call(arguments,2):null;return function(){return b.apply(a,c||arguments)}}function b(a){if(!a.store||!a.index)throw new Error("Terraformer.GeoStore requires an instace of a Terraformer.Store and a instance of Terraformer.RTree");this.deferred=a.deferred?a.deferred:c.Deferred,this.index=a.index,this.store=a.store}var c,d={};return"object"==typeof this.navigator&&(c=this.Terraformer),"object"==typeof module&&"object"==typeof module.exports&&(c=require("terraformer")),arguments[0]&&"function"==typeof define&&define.amd&&(c=arguments[0]),b.prototype.add=function(a,b){var d,e=new this.deferred;if(b&&e.then(function(a){b(null,a)},function(a){b(a,null)}),!a.type.match(/Feature/))throw new Error("Terraform.GeoStore : only Features and FeatureCollections are supported");if("Feature"===a.type&&!a.id)throw new Error("Terraform.GeoStore : Feature does not have an id property");if("FeatureCollection"===a.type){for(var f=0;f<a.features.length;f++){var g=a.features[f];if(d=c.Tools.calculateBounds(g),!g.id)throw new Error("Terraform.GeoStore : Feature does not have an id property");this.index.insert({x:d[0],y:d[1],w:Math.abs(d[0]-d[2]),h:Math.abs(d[1]-d[3])},g.id)}this.store.add(a,e)}else d=c.Tools.calculateBounds(a),this.index.insert({x:d[0],y:d[1],w:Math.abs(d[0]-d[2]),h:Math.abs(d[1]-d[3])},a.id),this.store.add(a,e);return e},b.prototype.remove=function(a,b){var c=new this.deferred;return b&&c.then(function(a){b(null,a)},function(a){b(a,null)}),this.index.remove(a),this.store.remove(a,c),c},b.prototype._test=function(b,d,e){var f=new this.deferred;e&&f.then(function(a){e(null,a)},function(a){e(a,null)});var g=c.Tools.calculateEnvelope(d);return this.index.search(g).then(a(this,function(a){var e=[],g=0,h=0,i=function(i){g++;var j=new c.Primitive(i);j[b]&&j[b](d)&&e.push(j),g>=a.length&&(h?f.reject("could not get all geometries"):f.resolve(e)),g>=a.length&&h&&f.reject("could not get all geometries")},j=function(){g++,h++,g>=a.length&&f.reject("could not get all geometries")};if(a.length)for(var k=0;k<a.length;k++)this.get(a[k]).then(i,j);else f.resolve(e)})),f},b.prototype.within=function(){console.error("`within` is not implemented")},b.prototype.intersects=function(){console.error("`intersects` is not implemented")},b.prototype.contains=function(a,b){return console.warn("contains will be depricated soon when `within` and `intersects` are complete"),this._test("contains",a,b)},b.prototype.update=function(a,b){var d=new this.deferred;if(b&&d.then(function(a){b(null,a)},function(a){b(a,null)}),"Feature"!==a.type)throw new Error("Terraform.GeoStore : only Features and FeatureCollections are supported");if(!a.id)throw new Error("Terraform.GeoStore : Feature does not have an id property");this.index.remove(a.id);var e=c.Tools.calculateBounds(a);return this.index.insert({x:e[0],y:e[1],w:Math.abs(e[0]-e[2]),h:Math.abs(e[1]-e[3])},a.id),this.store.update(a,d),d},b.prototype.get=function(a,b){var c=new this.deferred;return b&&c.then(function(a){b(null,a)},function(a){b(a,null)}),this.store.get(a,c),c},d.GeoStore=b,d});